# -*- coding: utf-8 -*-
"""task 4

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZkLHGbMd1BlyXJo0F9g4ehgXHe0Usseg
"""

import pandas as pd
import numpy as np
import seaborn as sns
from matplotlib import pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics import confusion_matrix,accuracy_score,classification_report

# Reading the data
ds=pd.read_csv("/content/spam.csv",encoding='latin')

# Preview data
ds.head()

ds.sample(10)

ds.shape

print("Rows--->",ds.shape[0])
print("Columns--->",ds.shape[1])

ds.isnull()

ds.isnull().sum()

ds.columns

ds.isna().mean()

ds.drop(columns=['Unnamed: 2','Unnamed: 3','Unnamed: 4'],axis=0,inplace=True)

ds

ds.shape

ds.columns=['spam/ham','SMS']

ds.loc[ds['spam/ham'] == 'spam', 'spam/ham',] = 0
ds.loc[ds['spam/ham'] == 'ham', 'spam/ham',] = 1

ds

"""**Train the model with spam dataset**"""

x=ds.SMS
x

y=ds['spam/ham']
y

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=2)

print(x.shape)

print(x_train.shape)

print(x_test.shape)

print(x_test.shape)

print(y_test.shape)

x_train,x_test

y_train,y_test

from sklearn.feature_extraction.text import TfidfVectorizer
feat_vect=TfidfVectorizer(stop_words='english',lowercase=True)
feat_vect

y_train=y_train.astype('int')
y_test=y_test.astype('int')

x_train_vec =feat_vect.fit_transform(x_train)

x_test_vec =feat_vect.transform(x_test)
print(x_train)

x_train_vec
print("x_train--->",x_train_vec)
print("x_test---->",x_test_vec)

model=LogisticRegression()

model.fit(x_train_vec,y_train)

model.score(x_train_vec,y_train)

model.score(x_test_vec,y_test)

predict_model=model.predict(x_test_vec)
predict_model

accuracy_score(y_test,predict_model)

confusion_matrix(y_test,predict_model)

print(classification_report(y_test,predict_model))